name: "Kaggle_Chars74k_VGG_ConvNet"
layers {
  name: "Kaggle_Chars74k_train"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "/home/matthias/kaggle/chars74k/train_leveldb"
    batch_size: 100
  }
  transform_param {
	mean_file: "/home/matthias/kaggle/chars74k/mean.binaryproto"
	mirror: 0
	crop_size: 48
  }
  include: { phase: TRAIN }
}
layers {
  name: "Kaggle_Chars74k_valid"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "/home/matthias/kaggle/chars74k/valid_leveldb"
    batch_size: 100
  }
  transform_param {
	mean_file: "/home/matthias/kaggle/chars74k/mean.binaryproto"
	mirror: 0
	crop_size: 48
  }
  include: { phase: TEST }
}
layers {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: CONVOLUTION
  blobs_lr: 1          
  blobs_lr: 2          
  weight_decay: 1      
  weight_decay: 0
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
	weight_filler {
	  type: "xavier"
	}
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}
layers {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: RELU
}
layers {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: CONVOLUTION
  blobs_lr: 1          
  blobs_lr: 2          
  weight_decay: 1      
  weight_decay: 0
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
	weight_filler {
	  type: "xavier"
	}
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}
layers {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: RELU
}
layers {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: CONVOLUTION
  blobs_lr: 1          
  blobs_lr: 2          
  weight_decay: 1      
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
	weight_filler {
	  type: "xavier"
	}
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}
layers {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: RELU
}
layers {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: CONVOLUTION
  blobs_lr: 1          
  blobs_lr: 2          
  weight_decay: 1      
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
	weight_filler {
	  type: "xavier"
	}
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}
layers {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: RELU
}
layers {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool2"
  top: "fc6"
  name: "fc6"
  type: INNER_PRODUCT
  blobs_lr: 1          
  blobs_lr: 2          
  weight_decay: 1      
  weight_decay: 0
  inner_product_param {
    num_output: 2048
	weight_filler {
	  type: "xavier"
	}
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}
layers {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: RELU
}
layers {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: INNER_PRODUCT
  blobs_lr: 1          
  blobs_lr: 2          
  weight_decay: 1      
  weight_decay: 0
  inner_product_param {
    num_output: 2048
	weight_filler {
	  type: "xavier"
	}
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}
layers {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: RELU
}
layers {
  bottom: "fc7"
  top: "fc7"
  name: "drop7"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "fc7"
  top: "fc8"
  name: "fc8"
  type: INNER_PRODUCT
  blobs_lr: 1          
  blobs_lr: 2          
  weight_decay: 1      
  weight_decay: 0      
  inner_product_param {
    num_output: 62
	weight_filler {
	  type: "xavier"
	}
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
